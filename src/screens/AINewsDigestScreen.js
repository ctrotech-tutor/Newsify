import React, { useState } from 'react';
import { View, Text, StyleSheet, ScrollView, Button, ActivityIndicator } from 'react-native';

const AINewsDigestScreen = () => {
  const [digest, setDigest] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const fetchDigest = async () => {
    setLoading(true);
    setError(null);
    try {
      // Placeholder for Gemini API call
      // In a real app, you would call your backend which then calls Gemini API
      const response = await new Promise(resolve => setTimeout(() => {
        resolve({
          summary: "This is a summary of today's top news, generated by AI. It covers various topics including technology advancements, global economic trends, and recent sports highlights. The digest aims to provide a quick overview of the most important events.",
          categories: [
            { name: "Technology", summary: "New breakthroughs in AI and quantum computing." },
            { name: "Economy", summary: "Stock markets show mixed signals amidst inflation concerns." },
            { name: "Sports", summary: "Major league playoffs heating up with unexpected upsets." }
          ]
        });
      }, 2000));
      setDigest(response);
    } catch (err) {
      setError("Failed to fetch AI digest. Please try again later.");
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>AI News Digest</Text>
      <Button title="Generate Daily Digest" onPress={fetchDigest} disabled={loading} />
      {loading && <ActivityIndicator size="large" color="#0000ff" style={styles.loader} />}
      {error && <Text style={styles.errorText}>{error}</Text>}
      {digest && (
        <ScrollView style={styles.digestContainer}>
          <Text style={styles.mainSummary}>{digest.summary}</Text>
          {digest.categories.map((cat, index) => (
            <View key={index} style={styles.categorySection}>
              <Text style={styles.categoryTitle}>{cat.name}</Text>
              <Text style={styles.categorySummary}>{cat.summary}</Text>
            </View>
          ))}
          {/* Optional TTS button will go here */}
        </ScrollView>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f0f2f5',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  loader: {
    marginTop: 20,
  },
  errorText: {
    color: 'red',
    textAlign: 'center',
    marginTop: 20,
  },
  digestContainer: {
    marginTop: 20,
    backgroundColor: '#fff',
    padding: 15,
    borderRadius: 10,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  mainSummary: {
    fontSize: 16,
    lineHeight: 24,
    marginBottom: 15,
  },
  categorySection: {
    marginBottom: 10,
    borderTopWidth: 1,
    borderTopColor: '#eee',
    paddingTop: 10,
  },
  categoryTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  categorySummary: {
    fontSize: 14,
    lineHeight: 20,
  },
});

export default AINewsDigestScreen;

